/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:527658:
  appc.background(255);
  appc.noFill();
  appc.beginShape();
  appc.vertex(25, 18);
  appc.vertex(275, 18);
  appc.vertex(275, 38);
  appc.vertex(25, 38);
  appc.endShape(CLOSE);
} //_CODE_:window1:527658:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:681417:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
   zoomFactor = (int)clamp(zoomFactor - (-1), 1, 4);
   gridSize = 10 * zoomFactor;
} //_CODE_:button1:681417:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:215787:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
   zoomFactor = (int)clamp(zoomFactor - 1, 1, 4);
   gridSize = 10 * zoomFactor;
} //_CODE_:button2:215787:

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:textfield1:522072:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield1:522072:

public void textfield2_change1(GTextField source, GEvent event) { //_CODE_:textfield2:824473:
  println("textfield2 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield2:824473:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:300020:
  println("button3 - GButton >> GEvent." + event + " @ " + millis());
  lines.add(new Line(int(textfield1.getText()), int(textfield2.getText())));
  textfield1.setText("");
  textfield2.setText("");
  //diisi creatLine tapi gg bisa loop coba di buat list kayak point 

} //_CODE_:button3:300020:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:904246:
  println("button4 - GButton >> GEvent." + event + " @ " + millis());
  begin = points.size();
} //_CODE_:button4:904246:

public void button5_click1(GButton source, GEvent event) { //_CODE_:button5:934592:
  println("button5 - GButton >> GEvent." + event + " @ " + millis());
  end = points.size()-1;
} //_CODE_:button5:934592:

public void button6_click1(GButton source, GEvent event) { //_CODE_:button6:665365:
  println("button6 - GButton >> GEvent." + event + " @ " + millis());
  begin=-1;
  end=-1;
  label4.setText("--"); 
  loc="";
  points.clear();
} //_CODE_:button6:665365:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Controler", 0, 0, 300, 300, JAVA2D);
  window1.noLoop();
  window1.addDrawHandler(this, "win_draw1");
  button1 = new GButton(window1, 19, 79, 40, 30);
  button1.setText("Zoom In");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window1, 68, 79, 40, 30);
  button2.setText("Zoom Out");
  button2.addEventHandler(this, "button2_click1");
  label1 = new GLabel(window1, 19, 50, 270, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Tools");
  label1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label1.setOpaque(false);
  label2 = new GLabel(window1, 19, 20, 81, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Coordinate :");
  label2.setOpaque(false);
  label3 = new GLabel(window1, 108, 20, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("--");
  label3.setLocalColorScheme(GCScheme.RED_SCHEME);
  label3.setOpaque(false);
  textfield1 = new GTextField(window1, 104, 120, 50, 20, G4P.SCROLLBARS_NONE);
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change1");
  textfield2 = new GTextField(window1, 166, 120, 50, 20, G4P.SCROLLBARS_NONE);
  textfield2.setOpaque(true);
  textfield2.addEventHandler(this, "textfield2_change1");
  button3 = new GButton(window1, 19, 120, 80, 30);
  button3.setText("Add Line");
  button3.addEventHandler(this, "button3_click1");
  button4 = new GButton(window1, 19, 166, 81, 30);
  button4.setText("Start Shape");
  button4.addEventHandler(this, "button4_click1");
  button5 = new GButton(window1, 109, 166, 81, 30);
  button5.setText("End Shape");
  button5.addEventHandler(this, "button5_click1");
  label4 = new GLabel(window1, 20, 206, 200, 77);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("--");
  label4.setOpaque(false);
  button6 = new GButton(window1, 197, 166, 80, 30);
  button6.setText("Remove Shape");
  button6.addEventHandler(this, "button6_click1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton button1; 
GButton button2; 
GLabel label1; 
GLabel label2; 
GLabel label3; 
GTextField textfield1; 
GTextField textfield2; 
GButton button3; 
GButton button4; 
GButton button5; 
GLabel label4; 
GButton button6; 